const INCORRECT = 0
const CORRECT = 2
range VALUE = INCORRECT..CORRECT

const DOSE = 3
const DELAY = 4
const LIMIT = 5
const START = 6
range PHASE = DOSE..START

PCA = (fSystemOff -> pressOnOff -> SET_DOSE[INCORRECT][INCORRECT][INCORRECT]),

SET_DOSE[dose:VALUE][delay:VALUE][limit:VALUE] = (
    pressClear -> SET_DOSE[INCORRECT][delay][limit]
  | pressLeft -> SET_DOSE[dose][delay][limit]
  | pressRight -> SET_DOSE[dose][delay][limit]
  | pressUp -> SET_DOSE[(dose+1)%(CORRECT+1)][delay][limit]
  | pressEnter -> iSetDose[dose] -> SET_DELAY[dose][delay][limit]
  | pressOnOff -> pressOnOff -> PCA
),

SET_DELAY[dose:VALUE][delay:VALUE][limit:VALUE] = (
    pressClear -> SET_DELAY[dose][INCORRECT][limit]
  | pressLeft -> SET_DELAY[dose][delay][limit]
  | pressRight -> SET_DELAY[dose][delay][limit]
  | pressUp -> SET_DELAY[dose][(delay+1)%(CORRECT+1)][limit]
  | pressEnter -> iSetDelay[delay] -> SET_LIMIT[dose][delay][limit]
  | pressOnOff -> pressOnOff -> PCA
),

SET_LIMIT[dose:VALUE][delay:VALUE][limit:VALUE] = (
    pressClear -> SET_LIMIT[dose][delay][INCORRECT]
  | pressLeft -> SET_LIMIT[dose][delay][limit]
  | pressRight -> SET_LIMIT[dose][delay][limit]
  | pressUp -> SET_LIMIT[dose][delay][(limit+1)%(CORRECT+1)]
  | pressEnter -> iSetLimit[limit] -> START[dose][delay][limit]
  | pressOnOff -> pressOnOff -> PCA
),

START[dose:VALUE][delay:VALUE][limit:VALUE] = (
    pressEnter -> SET_DOSE[dose][delay][limit]
  | pressStart -> fEnterAdmin -> ADMIN[dose][delay][limit]
  | pressOnOff -> pressOnOff -> PCA
),

ADMIN[dose:VALUE][delay:VALUE][limit:VALUE] = (
    iAdmin -> ADMIN[dose][delay][limit]
  | pressStop -> pressStop -> fLeaveAdmin -> START[dose][delay][limit]
).

fluent InAdmin = <fEnterAdmin, fLeaveAdmin>
fluent PrescribedDose = <set_dose[CORRECT], set_dose[INCORRECT]>
fluent PrescribedDelay = <set_delay[CORRECT], set_delay[INCORRECT]>
fluent PrescribedLimit = <set_limit[CORRECT], set_limit[INCORRECT]>

assert P = [](InAdmin -> (PrescribedDose && PrescribedDelay && PrescribedLimit))

A_TURN_ON = (fSystemOff -> TURN_ON), TURN_ON = (pressOnOff -> ON), ON = (pressOnOff -> ON | fSystemOff -> TURN_ON).

||SYS = (PCA || A_TURN_ON).
